*cmdlinehelp.txt*   Display help on the command in the command line
                    Author: Thomas Link, micathom at gmail com
                    
When editing a command line, press <c-o> (see also |g:cmdlinehelpMapView|) 
to display help on the command currently being edited.

Use <c-pageup>/<c-pagedown> to scroll the help window.

This plugin was inspired by a post by Marcel Boon to vim_use:
http://groups.google.com/group/vim_use/browse_frm/thread/aaa3d652d7b76d02


-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed or update your runtime.


========================================================================
Contents~

    plugin/cmdlinehelp.vim
        g:cmdlinehelpMapView ..... |g:cmdlinehelpMapView|
        g:cmdlinehelpMapDown ..... |g:cmdlinehelpMapDown|
        g:cmdlinehelpMapUp ....... |g:cmdlinehelpMapUp|
        g:cmdlinehelpIgnore ...... |g:cmdlinehelpIgnore|
        g:cmdlinehelpTags ........ |g:cmdlinehelpTags|
        g:cmdlinehelpTable ....... |g:cmdlinehelpTable|
        g:cmdlinehelpPrefixes .... |g:cmdlinehelpPrefixes|
        CmdLineHelpView .......... |CmdLineHelpView()|
        CmdLineHelpBuffer ........ |CmdLineHelpBuffer()|
        CmdLineHelpDown .......... |CmdLineHelpDown()|
        CmdLineHelpUp ............ |CmdLineHelpUp()|


========================================================================
plugin/cmdlinehelp.vim~


NOTE:
- This plugin temporarily sets &l:tags to g:cmdlinehelpTags. I hope 
  this doesn't interfere with anything else.

                                                    *g:cmdlinehelpMapView*
g:cmdlinehelpMapView           (default: '<c-o>')
    Default map.

                                                    *g:cmdlinehelpMapDown*
g:cmdlinehelpMapDown           (default: '<c-pagedown>')

                                                    *g:cmdlinehelpMapUp*
g:cmdlinehelpMapUp             (default: '<c-pageup>')

                                                    *g:cmdlinehelpIgnore*
g:cmdlinehelpIgnore            (default: 'sil\%[ent]\|verb\%[ose]')
    Uninteresting stuff that should be ignored when searching for a command.

                                                    *g:cmdlinehelpTags*
g:cmdlinehelpTags              (default: join(split(globpath(&rtp, 'doc/tags'), '\n'), ','))
    The tags. Defaults to standard help tags.

                                                    *g:cmdlinehelpTable*
g:cmdlinehelpTable
    A table of tags that should be displayed instead of the default 
    tag. This only works for exact matches.

                                                    *g:cmdlinehelpPrefixes*
g:cmdlinehelpPrefixes
    If a tag with one of these prefixes is found, that one will be 
    used instead of the default prefix. This should make it quite easy 
    to use nicely formatted cheat sheets without interfering with the 
    normal vim help. Simply save your cheat sheet to ~/vimfiles/doc/, 
    tag the entries with a prefix (e.g. "cheat::edit" for ":edit") and 
    run |:helptags|.

                                                    *CmdLineHelpView()*
CmdLineHelpView()
    Find help for the first "interesting" command on the current command line.

                                                    *CmdLineHelpBuffer()*
CmdLineHelpBuffer()
    Save the current command line.

                                                    *CmdLineHelpDown()*
CmdLineHelpDown()

                                                    *CmdLineHelpUp()*
CmdLineHelpUp()



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
